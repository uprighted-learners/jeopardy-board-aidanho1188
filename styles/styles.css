/* Import external stylesheets */
@import url("manuel-style.css");
@import url("https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css");
@import url("https://github.com/IanLunn/Hover/blob/master/css/hover.css");
@import url("keyframes.css");
/* Global styles */
* {
  text-align: center;
  box-sizing: border-box;
}

/* Container styles */
body {
  display: grid;
  grid-template-rows: 1fr 85%;
  margin: 0;
  grid-template-areas:
    "header"
    "main"
    "footer";
}

/* Main content styles */
main {
  grid-area: main;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Footer styles */
footer {
  grid-area: footer;
  width: 50%;
  margin: auto auto 0 auto;
  padding: 2vh;
  color: white;
  background-color: rgb(12, 32, 49);
}

/* First page styles */
img {
  max-width: 100%;
  height: auto;
  border: 1px solid white;
}

button {
  margin: 2%;
  padding: 1vh;
  border: none;
  border-radius: 10px;
  background-color: rgb(0, 79, 110);
  color: white;
  font-weight: bold;
  text-decoration: none;
}

button:hover {
  background-color: rgb(0, 79, 110);
  box-shadow: 0 0 10px rgb(6, 52, 70);
  transition: 0.5s;
}

/* Page 1 and 2 styles */
.game-grid {
  display: grid;
  grid-template-rows: repeat(5, auto);
  grid-template-columns: repeat(6, auto);
  width: 100%;
  padding: 0 10% 0;
}

.game-grid > span {
  border: 1px solid black;
}

.game-grid .category {
  background-color: rgb(1, 33, 100);
  color: white;
  padding: 1vh;
  text-transform: uppercase;
}

.game-grid .point {
  padding: 2vh;
}

.user-choices{
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.score {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  width: 25%;
}

.next-round-btn,
#continue-btn {
  align-self: self-end;
  width: 10%;
}

/* Last page styles */
.final-category {
  background-color: rgb(1, 33, 100);
  color: white;
  padding: 1%;
  width: 40%;
  margin: 1vh;
  border: 1px solid black;
}

.final-question {
  padding: 10%;
  width: 40%;
  margin: 1vh;
  border: 1px solid black;
}

.user-input {
  display: flex;
  flex-direction: column;
}

.user-input input,
.submit-btn {
  margin: 1vh;
}

/* Icebox */
/* Theme styles */
.game-grid .point,
.final-question {
  color: rgb(242, 204, 3);
  background-color: rgb(1, 48, 148);
}

h3 {
  font-family: "Shadows Into Light", cursive, sans-serif;
}

.user-input input {
  font-family: "Shadows Into Light", cursive, sans-serif;
}

/* Mobile responsive styles */
@media screen and (max-width: 600px) {
  main .next-round-btn {
    align-self: center;
  }

  .game-grid .category {
    font-size: xx-small;
  }

  .game-grid {
    padding-left: 0%;
    padding-right: 0%;
  }

  .user-choices,
  .score {
    flex-direction: column;
  }

  * {
    min-width: -webkit-fill-available;
    min-height: auto;
    box-sizing: content-box;
    padding: 0%;
  }
}

/* Animated elements */
button.play {
  animation: heartBeat;
  animation-duration: 5s;
  animation-iteration-count: infinite;
}

.game-grid span.point:hover {
  animation: swing;
  animation-duration: 3s;
  animation-iteration-count: infinite;
}

span.final-question:hover {
  animation: pulse;
  animation-duration: 1s;
  animation-iteration-count: infinite;
}

/* popup */
.popup {
  display: none;
  opacity: 0;
  position: fixed;
  top: 50%;
  left: 50%;
  border-radius: 5px;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  z-index: 1000;
}

.popup.show {
  display: block;
  animation: backInDown 0.5s ease-in-out;
  opacity: 1;
}

.popup.hide {
  animation: backOutDown 0.5s ease-in-out;
  opacity: 0;
}

.popup-content {
  background-color: rgb(51, 98, 199);
  padding: 5vw;
  border-radius: 5px;
}

.overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
}

.overlay.show {
  display: block;
}

.notification {
  display: block;
  position: fixed;
  width: 100%;
  opacity: 0;
  background-color: rgb(51, 98, 199);
  padding: 1vw;
  border-radius: 5px;
  z-index: 2000;
}

.notification.show {
  display: block;
  animation: fadeInDown 0.5s ease-in-out;
  opacity: 1;
}

.notification.hide {
  animation: fadeOutUp 0.5s ease-in-out;
  opacity: 0;
}
